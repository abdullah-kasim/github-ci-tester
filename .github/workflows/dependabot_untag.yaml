name: Dependabot untag
on:
  pull_request:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  dependabot:
    name: Dependabot auto-merge
    runs-on: ubuntu-latest
    # if the PR was merged and the PR is created by dependabot
    if: ${{ github.event.pull_request.merged == true && github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Remove [Status] Needs Review tag
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: tags } = await github.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const needsReviewTag = tags.find(tag => tag.name === '[Status] Needs Review');
            if (needsReviewTag) {
              await github.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: needsReviewTag.name,
              });
            }
      - name: Add [Status] Ready to Deploy tag
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: tags } = await github.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const readyToDeployTag = tags.find(tag => tag.name === '[Status] Ready to Deploy');
            if (!readyToDeployTag) {
              await github.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['[Status] Ready to Deploy'],
              });
            }
